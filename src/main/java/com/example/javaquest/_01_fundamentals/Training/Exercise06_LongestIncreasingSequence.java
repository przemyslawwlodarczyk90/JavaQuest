package com.example.javaquest._01_fundamentals.Training;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Exercise06_LongestIncreasingSequence {
    public static void main(String[] args) {
        /*
         * ğŸ§ª Zadanie 6 (ÅšREDNIE): NajdÅ‚uÅ¼szy rosnÄ…cy ciÄ…g
         *
         * Wczytaj z konsoli 10 liczb caÅ‚kowitych (int).
         * ZnajdÅº i wypisz dÅ‚ugoÅ›Ä‡ najdÅ‚uÅ¼szego **ciÄ…gÅ‚ego, rosnÄ…cego** fragmentu tego ciÄ…gu.
         *
         * PrzykÅ‚ad:
         * WejÅ›cie:
         * 1 2 2 3 4 1 2 3 4 5
         *
         * Wynik:
         * NajdÅ‚uÅ¼szy rosnÄ…cy fragment ma dÅ‚ugoÅ›Ä‡: 5
         * (bo 1 2 3 4 5)
         *
         * WskazÃ³wki:
         * - pamiÄ™taj: ciÄ…g musi byÄ‡ **ciÄ…gÅ‚y** (czyli bez przerw)
         * - uÅ¼yj dwÃ³ch zmiennych: currentLength i maxLength
         */

        Scanner scanner = new Scanner(System.in);
        List<Integer> digits = new ArrayList<>();

        for (int i = 0; i < 10; i++) {
            System.out.print("Podaj liczbÄ™ #" + (i + 1) + ": ");
            digits.add(scanner.nextInt());
        }

        int currentLength = 1;
        int maxLength = 1;

        for (int i = 1; i < digits.size(); i++) {
            if (digits.get(i) > digits.get(i - 1)) {
                currentLength++;
                if (currentLength > maxLength) {
                    maxLength = currentLength;
                }
            } else {
                currentLength = 1;
            }
        }

        System.out.println("NajdÅ‚uÅ¼szy rosnÄ…cy fragment ma dÅ‚ugoÅ›Ä‡: " + maxLength);
        scanner.close();
    }
}





